#!/usr/bin/env node

var jsonldstore = require('../lib/jsonldstore')
  , argv = require('optimist').argv
  , assert = require('assert')
  , bunyan = require('bunyan')
  , colors = require('colors')
  , fs = require('fs')
  , http = require('http')
  , portfinder = require('portfinder')
  , Readable = require('stream').Readable
  , Writable = require('stream').Writable
    
if (argv.h || argv.help) {
  console.log(
    [ "usage: jsonldstore [options]"
      , ""
      , "options:"
      , "  -p                 Port to use [8080]"
      , "  -a                 Address to use [0.0.0.0]"
      , "  -d                 JSON file with data to load"
      , "  -b                 Bucket to load data into [default]"
      , "  -s --silent        Suppress log messages from output"
      , "  -h --help          Print this list and exit"
    ].join('\n'))
  process.exit()
}

var port = argv.p,
    host = argv.a || '0.0.0.0',
    log = bunyan.createLogger(
      { name: 'jsonldstore'
      , level: (argv.s || argv.silent) ? 'fatal' : 'debug' 
      })

if (!argv.p) {
  portfinder.basePort = 8080
  portfinder.getPort(function (err, port) {
    if (err) throw err
    listen(port)
  })
} else {
  listen(port)
}

function logwriter(level) {
  var writer = new Writable()
  writer._write = function(chunk, encoding, done){
    log[level](chunk.toString())
    done()
  }
  return writer
}

function load(port) {
  var options = { hostname: host
                , port: port
                , method: 'POST'
                , path: '/'
                }
    , req = http.request(options, function(res) {
        log.info('STATUS: ' + res.statusCode)
        log.info('HEADERS: ' + JSON.stringify(res.headers))
        res.pipe(logwriter('info'))
      })
  fs.createReadStream(argv.d).pipe(req)
}

function listen(port) {
  var server = jsonldstore.createServer(
    { name: 'jsonldstore'
    , bucket: argv.b
    , log: log
    })
  server.on('listening', function() {
    if (argv.d) load(port)
    log.info('Starting up jsonldstore, serving '.yellow
      + ' on port: '.yellow
      + port.toString().cyan);
    log.info('Hit CTRL-C to stop the server');
  })
  server.listen(port, host)
}

if (process.platform !== 'win32') {
  //
  // Signal handlers don't work on Windows.
  //
  process.on('SIGINT', function () {
    log.info('\njsonldstore stopped.'.red);
    process.exit();
  });
}
